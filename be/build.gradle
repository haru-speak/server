plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.2'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}

ext {
    set('springCloudVersion', "2021.0.5")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    // Web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // Database
    runtimeOnly 'mysql:mysql-connector-java'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Dev
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Test
    testCompileOnly 'org.projectlombok:lombok:1.18.12'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // TestContainers
    testImplementation "org.testcontainers:junit-jupiter:1.17.2"
    testImplementation "org.testcontainers:mysql:1.17.2"

    // WireMock
    testImplementation "org.springframework.cloud:spring-cloud-starter-contract-stub-runner"

    // API Docs
    implementation 'io.springfox:springfox-boot-starter:3.0.0'

    // OAuth
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5', 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // AWS S3
    implementation 'io.awspring.cloud:spring-cloud-starter-aws:2.4.2'
    implementation 'com.amazonaws:aws-java-sdk-s3'
    testImplementation 'io.findify:s3mock_2.13:0.2.6'
}

tasks.named('test') {
    useJUnitPlatform()
}

processResources.dependsOn('copyGitSubmodule')

task copyGitSubmodule(type: Copy) {
    from './config'
    into './src/main/resources'
    include '*.yml'
    include 'db/**'
}


